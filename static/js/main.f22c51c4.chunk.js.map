{"version":3,"sources":["components/images/logo11.png","components/Header.js","services/musicsAPI.js","components/images/logo14.png","pages/Loading.js","components/MusicCard.js","services/favoriteSongsAPI.js","pages/Album.js","components/MusicCardFavorite.js","pages/Favorites.js","pages/Search.js","services/searchAlbumsAPI.js","App.jsx","serviceWorkerRegistration.js","index.js"],"names":["Header","className","href","src","logo","alt","to","React","Component","getMusics","id","fetch","request","json","requestJson","results","Loading","logo14","MusicCard","this","props","musics","changeFavorite","isFavorite","map","music","trackName","controls","previewUrl","kind","type","trackId","onChange","checked","htmlFor","FAVORITE_SONGS_KEY","readFavoriteSongs","JSON","parse","localStorage","getItem","saveFavoriteSongs","favoriteSongs","setItem","stringify","getFavoriteSongs","addSong","song","removeSong","filter","s","Album","renderMusics","setState","loading","match","params","data","getSavedMusic","state","length","includes","trackID","artworkUrl100","replace","collectionName","artistName","slice","MusicCardFavorite","artworkUrl60","Favorites","Search","handlechange","value","btnSearchAlbums","searchResults","renderAlbums","name","placeholder","onClick","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","response","artistId","collectionId","collectionPrice","releaseDate","trackCount","App","handleChange","target","artistSearch","albums","albumsResult","artistSearched","album","path","component","render","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","basename","process","document","getElementById","URL","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f22c51c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo11.4639a3fe.png\";","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport logo from \"./images/logo11.png\";\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <div className=\"header\">\n          <div className=\"navbar\">\n            <a href=\"/my-music\" className=\"logo\">\n              <img src={logo} alt=\"logo\" />\n            </a>\n            <div className=\"nav-item\">\n              <Link to=\"/favorites\">❤ FAVORITES</Link>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n}\n}\n\nexport default Header;","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","export default __webpack_public_path__ + \"static/media/logo14.e911d3cf.png\";","import React from 'react';\nimport logo14 from \"../components/images/logo14.png\";\n\nclass Loading extends React.Component {\n  render() {\n    return <div className='load'>\n    <img src={logo14} alt=\"logo\" />\n    </div>\n    \n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MusicCard extends React.Component {\n  render() {\n    const { musics, changeFavorite, isFavorite } = this.props;\n    return musics.map((music) => (\n      <div key={music.trackId} className=\"music-card\">\n        <p>{music.trackName}</p>\n        <audio controls>\n          <source src={music.previewUrl} />\n          <track kind=\"captions\" />\n          Your browser does not support the element\n          <code>audio</code>.\n        </audio>\n        <input\n          type=\"checkbox\"\n          className=\"heart-checkbox\"\n          id={music.trackId}\n          onChange={() => changeFavorite(music, music.trackId)}\n          checked={isFavorite(music.trackId)}\n        />\n        <label htmlFor={music.trackId} className=\"heart-label\">\n          ❤\n        </label>\n      </div>\n    ));\n  }\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.array.isRequired,\n  isFavorite: PropTypes.func.isRequired,\n  changeFavorite: PropTypes.func.isRequired,\n};\n\nexport default MusicCard;","const FAVORITE_SONGS_KEY = 'favorite_songs';\n\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\nexport const getFavoriteSongs = () => {\n  const favoriteSongs = readFavoriteSongs();\n  if (favoriteSongs === null) return [];\n  return favoriteSongs;\n};\n\nexport const addSong = (song) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    if (favoriteSongs === null) saveFavoriteSongs([ song]);\n    else saveFavoriteSongs([...favoriteSongs, song]);\n  }\n};\n\nexport const removeSong = (song) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = { musics: [], loading: true, favoriteSongs: [] };\n  }\n\n  componentDidMount() {\n    this.getSavedMusic();\n    this.renderMusics();\n  }\n\n  renderMusics = () => {\n    this.setState({ loading: true },\n      async () => {\n        const { match } = this.props;\n        const { id } = match.params;\n        const data = await getMusics(id);\n        this.setState({ musics: [...data], loading: false });\n      });\n  }\n\n  getSavedMusic = () => {\n    const data = getFavoriteSongs();\n    this.setState({ favoriteSongs: [...data] });\n  }\n\n  isFavorite = (trackId) => {\n    const { favoriteSongs } = this.state;\n    if (favoriteSongs.length === 0) return false;\n    return favoriteSongs\n      .map((song) => song.trackId)\n      .includes(trackId);\n  }\n\n  changeFavorite = (song, trackID) => {\n    if (this.isFavorite(trackID)) {\n      removeSong(song);\n      this.getSavedMusic();\n    }\n    if (!this.isFavorite(trackID)) {\n      addSong(song);\n      this.getSavedMusic();\n    }\n  }\n\n  render() {\n    const { musics, loading } = this.state;\n    return (\n      <>\n        <Header />\n        { loading && <Loading /> }\n        { !loading\n          && (\n            <div id=\"album-page\">\n              <div id=\"album-cover\">\n                <img src={ musics[0].artworkUrl100.replace('100x100bb.jpg', '300x300bb.jpg') } alt={ musics[0].collectionName } />\n                <h2>{ musics[0].artistName }</h2>\n                <h3>{ musics[0].collectionName }</h3>        \n              </div>\n              <div id=\"album-musics\">\n                <MusicCard\n                  musics={ musics.slice(1) }\n                  changeFavorite={ this.changeFavorite }\n                  isFavorite={ this.isFavorite }\n                />\n              </div>\n            </div>\n          )}\n      </>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default Album;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass MusicCardFavorite extends React.Component {\n  render() {\n    const { musics, changeFavorite, isFavorite } = this.props;\n    return musics.map((music) => (\n      <div key={music.trackId} className=\"music-card\">\n        <img\n          src={music.artworkUrl60}\n          className=\"mini-cover\"\n          alt={music.trackName}\n        />\n        <p>{music.trackName}</p>\n        <audio controls>\n          <source src={music.previewUrl} />\n          <track kind=\"captions\" />\n          Your browser does not support the element\n          <code>audio</code>.\n        </audio>\n        <input\n          type=\"checkbox\"\n          className=\"heart-checkbox\"\n          id={music.trackId}\n          onChange={() => changeFavorite(music, music.trackId)}\n          checked={isFavorite(music.trackId)}\n        />\n        <label htmlFor={music.trackId} className=\"heart-label\">\n          ❤\n        </label>\n      </div>\n    ));\n  }\n}\n\nMusicCardFavorite.propTypes = {\n  musics: PropTypes.array.isRequired,\n  isFavorite: PropTypes.func.isRequired,\n  changeFavorite: PropTypes.func.isRequired,\n};\n\nexport default MusicCardFavorite;","import React from 'react';\nimport Header from '../components/Header';\nimport Loading from './Loading';\nimport MusicCardFavorite from '../components/MusicCardFavorite';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n    this.state = { favoriteSongs: [] };\n  }\n\n  componentDidMount() {\n    this.getSavedMusic();\n  }\n\n  getSavedMusic =  () => {\n    const data = getFavoriteSongs();\n    this.setState({ favoriteSongs: [...data] });\n  };\n\n  isFavorite = (trackId) => {\n    const { favoriteSongs } = this.state;\n    if (favoriteSongs.length === 0) return false;\n    return favoriteSongs\n      .map((song) => song.trackId)\n      .includes(trackId);\n  }\n\n  changeFavorite = (song, trackID) => {\n    if (this.isFavorite(trackID)) {\n      removeSong(song);\n      this.getSavedMusic();\n    }\n    if (!this.isFavorite(trackID)) {\n      addSong(song);\n      this.getSavedMusic();\n    }\n  }\n\n  render() {\n    const { favoriteSongs } = this.state;\n    return (\n      <>\n        <Header />\n          <div id=\"favorites\">\n            <MusicCardFavorite\n              musics={ favoriteSongs }\n              changeFavorite={ this.changeFavorite }\n              isFavorite={ this.isFavorite }\n            />\n          </div>\n      </>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from './Loading';\n\n\nclass Search extends React.Component {\n  render() {\n    const {\n      handlechange,\n      value,\n      btnSearchAlbums,\n      searchResults,\n      loading,\n      renderAlbums,\n    } = this.props;\n\n    return (\n      <>\n        <Header />\n        <div id=\"searchSection\">\n          <div className=\"searchText\">\n            <h1>FIND MUSIC FROM YOUR FAVORITE ARTIST</h1>\n          </div>\n          <input\n            className=\"searchBox\"\n            type=\"text\"\n            name=\"artistSearch\"\n            placeholder=\"Artist Name\"\n            onChange={handlechange}\n            value={value}\n          />\n          <button className=\"searchBtn\" type=\"submit\" onClick={btnSearchAlbums}>\n            SEARCH\n          </button>\n        </div>\n        <div>\n          {loading && <Loading />}\n          {searchResults && renderAlbums()}\n        </div>\n\n        <div id=\"blog\">\n          <h1>TRENDING</h1>\n          <main>\n            <section>\n              <div>\n                <img\n                  src=\"https://i.scdn.co/image/ab67616d0000b273b1038aaf26f4c6daad614707\"\n                  alt=\"Free\"\n                />\n              </div>\n              <article>\n                <span>New Music</span>\n                <h2>DJ KHALED \"GOD DID\"</h2>\n                <p></p>\n              </article>\n            </section>\n\n            <section>\n              <div>\n                <img\n                  src=\"https://i.scdn.co/image/ab67616d0000b273de14fe659e3f9327af026e42\"\n                  alt=\"Free\"\n                />\n              </div>\n              <article>\n                <span>TRENDING</span>\n                <h2>OMAH LAY \"BOY ALONE\"</h2>\n                <p></p>\n              </article>\n            </section>\n\n            <section>\n              <div>\n                <img\n                  src=\"https://i.scdn.co/image/ab67616d0000b27349d694203245f241a1bcaa72\"\n                  alt=\"Free\"\n                />\n              </div>\n              <article>\n                <span>TRENDING</span>\n                <h2>BAD BUNNY \"UN VERANO SIN TI\"</h2>\n                <p></p>\n              </article>\n            </section>\n\n            <section>\n              <div>\n                <img\n                  src=\"https://resources.tidal.com/images/f2e4192f/eefb/47be/afc4/03ed24b4e625/640x640.jpg\"\n                  alt=\"Free\"\n                />\n              </div>\n              <article>\n                <span>TRENDING</span>\n                <h2>LIL BABY \"DETOX\"</h2>\n                <p></p>\n              </article>\n            </section>\n\n            <section>\n              <div>\n                <img\n                  src=\"https://i.scdn.co/image/ab67616d0000b2739904ecb0b1148a128bdd5e36\"\n                  alt=\"Free\"\n                />\n              </div>\n              <article>\n                <span>TRENDING</span>\n                <h2>STEVE LACY \"BAD HABIT\"</h2>\n                <p></p>\n              </article>\n            </section>\n\n            <section>\n              <div>\n                <img\n                  src=\"https://i.scdn.co/image/ab67616d0000b273b46f74097655d7f353caab14\"\n                  alt=\"Free\"\n                />\n              </div>\n              <article>\n                <span>TRENDING</span>\n                <h2>HARRY STYLES \"AS IT WAS\"</h2>\n                <p>\n                </p>\n              </article>\n            </section>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nSearch.propTypes = {\n  handlechange: PropTypes.func.isRequired,\n  btnSearchAlbums: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  searchResults: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  renderAlbums: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Search from './pages/Search';\nimport searchAlbumsAPI from './services/searchAlbumsAPI';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      searchResults: false,\n      artistSearch: '',\n      artistSearched: '',\n      albumsResult: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  }\n\n  btnSearchAlbums = async () => {\n    const { artistSearch } = this.state;\n    this.setState({ loading: true, artistSearch: '', searchResults: false },\n      async () => {\n        const albums = await searchAlbumsAPI(artistSearch);\n        this.setState({\n          loading: false,\n          albumsResult: [...albums],\n          searchResults: true,\n          artistSearched: artistSearch,\n        });\n      });\n  }\n\n  renderAlbums = () => {\n    const { artistSearched, albumsResult } = this.state;\n    if (albumsResult.length === 0) {\n      return <h1>No albums were found</h1>;\n    } return (\n      <section className=\"search-results\">\n        <h2>\n          { `Album search for ${artistSearched}:` }\n        </h2>\n        <div className='albums'>\n        {albumsResult.map((album) => {\n          const {\n            artistName,\n            collectionId,\n            artworkUrl100,\n            collectionName,\n          } = album;\n          return (\n            <div key={ collectionId } className=\"album\">\n              <Link to={ `/album/${collectionId}` }>\n                <img src={ artworkUrl100.replace('100x100bb.jpg', '300x300bb.jpg') } alt={ collectionName } />\n              </Link>\n              <h3>{ artistName }</h3>\n              <p>{ collectionName }</p>\n            </div>\n          );\n        }) }\n        </div>\n      </section>\n    );\n  };\n\n  render() {\n    const {\n      loading,\n      artistSearch,\n      searchResults,\n      albumsResult,\n    } = this.state;\n    return (\n      <main>\n        <Switch>\n          <Route path=\"/album/:id\" component={ Album } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route\n            path=\"/\"\n            render={(props) => (\n              <Search\n                {...props}\n                handlechange={ this.handleChange }\n                value={ artistSearch }\n                btnSearchAlbums={ this.btnSearchAlbums }\n                searchResults={ searchResults }\n                albumsResult={ albumsResult }\n                loading={ loading }\n                renderAlbums={ this.renderAlbums }\n              />) }\n          />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}